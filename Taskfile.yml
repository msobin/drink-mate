version: '3'

vars:
  PHP: "{{if not .LOCALLY}}docker compose exec -it php{{end}}"
  SH: "{{if not .LOCALLY}}docker compose exec -it php{{end}}"

env:
  APP_ENV: dev

dotenv:
  - '.env.{{.APP_ENV}}.local'
  - '.env.{{.APP_ENV}}'
  - '.env.local'
  - '.env'

tasks:
  up-dev:
    cmds:
      - docker compose up --build --remove-orphans

  up:
    cmds:
      - docker compose up --build --detach --remove-orphans
      - task: composer-install
      - task: jwt
      - task: npm-install
      - task: pgwait
      - task: db

  db:
    deps: [composer-install]
    cmds:
      - "{{.PHP}} bin/console doctrine:database:create --if-not-exists"
      - "{{.PHP}} bin/console doctrine:migrations:migrate --no-interaction"

  diff: "{{.PHP}} bin/console doctrine:migrations:diff"

  migrate: "{{.PHP}} bin/console doctrine:migrations:migrate"

  jwt:
    cmd: "{{.PHP}} bin/console lexik:jwt:generate-keypair"
    status:
      - test -f config/jwt/private.pem
      - test -f config/jwt/public.pem
    generates:
      - config/jwt/private.pem
      - config/jwt/public.pem

  composer-install:
    cmd: "{{.PHP}} composer install"
    sources:
      - composer.json
      - composer.lock
    generates:
      - vendor/autoload.php

  npm-install:
    cmds:
      - "{{.PHP}} npm install"
      - "{{.PHP}} npm run dev"
    status:
      - test -f node_modules/.package-lock.json
    generates:
      - node_modules/.package-lock.json

  composer-validate: "{{.PHP}} composer validate --strict --no-check-publish"

  composer-require:
    deps: [composer-install]
    cmd: "{{.PHP}} vendor/bin/composer-require-checker check"

  composer-unused:
    deps: [composer-install]
    cmd: "{{.PHP}} vendor/bin/composer-unused"

  composer-audit: "{{.PHP}} composer audit"

  composer-normalize:
    deps: [composer-install]
    cmds:
      - "{{.PHP}} composer bump --dry-run"
      - "{{.PHP}} composer normalize --dry-run --diff"

  composer-normalize-fix:
    deps: [composer-install]
    cmds:
      - "{{.PHP}} composer bump"
      - "{{.PHP}} composer normalize"

  stop: docker compose stop

  down: docker compose down --remove-orphans --volumes

  chown: sudo chown -R $USER:$USER .

  bash: "{{.PHP}} bash"

  pgwait: "{{.PHP}} wait-for-it.sh postgres:5432 -t 0"

  check:
    cmds:
      - task: composer-validate
      - task: composer-require
      - task: composer-unused
      - task: composer-audit
      - task: composer-normalize
